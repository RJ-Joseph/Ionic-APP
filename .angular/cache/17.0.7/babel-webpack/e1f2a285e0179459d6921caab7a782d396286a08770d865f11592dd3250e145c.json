{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ProductsService {\n  constructor() {\n    this.httpClient = inject(HttpClient);\n  }\n  getAll() {\n    return firstValueFrom(this.httpClient.get(''));\n  }\n  static #_ = this.ɵfac = function ProductsService_Factory(t) {\n    return new (t || ProductsService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductsService,\n    factory: ProductsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpClient","inject","firstValueFrom","ProductsService","constructor","httpClient","getAll","get","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\josep\\IONPra\\src\\app\\services\\products.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface Welcome {\n  abilities:                Ability[];\n  base_experience:          number;\n  cries:                    Cries;\n  forms:                    Species[];\n  game_indices:             GameIndex[];\n  height:                   number;\n  held_items:               HeldItem[];\n  id:                       number;\n  is_default:               boolean;\n  location_area_encounters: string;\n  moves:                    Move[];\n  name:                     string;\n  order:                    number;\n  past_abilities:           any[];\n  past_types:               any[];\n  species:                  Species;\n  sprites:                  Sprites;\n  stats:                    Stat[];\n  types:                    Type[];\n  weight:                   number;\n}\n\nexport interface Ability {\n  ability:   Species;\n  is_hidden: boolean;\n  slot:      number;\n}\n\nexport interface Species {\n  name: string;\n  url:  string;\n}\n\nexport interface Cries {\n  latest: string;\n  legacy: string;\n}\n\nexport interface GameIndex {\n  game_index: number;\n  version:    Species;\n}\n\nexport interface HeldItem {\n  item:            Species;\n  version_details: VersionDetail[];\n}\n\nexport interface VersionDetail {\n  rarity:  number;\n  version: Species;\n}\n\nexport interface Move {\n  move:                  Species;\n  version_group_details: VersionGroupDetail[];\n}\n\nexport interface VersionGroupDetail {\n  level_learned_at:  number;\n  move_learn_method: Species;\n  version_group:     Species;\n}\n\nexport interface GenerationV {\n  \"black-white\": Sprites;\n}\n\nexport interface GenerationIv {\n  \"diamond-pearl\":        Sprites;\n  \"heartgold-soulsilver\": Sprites;\n  platinum:               Sprites;\n}\n\nexport interface Versions {\n  \"generation-i\":    GenerationI;\n  \"generation-ii\":   GenerationIi;\n  \"generation-iii\":  GenerationIii;\n  \"generation-iv\":   GenerationIv;\n  \"generation-v\":    GenerationV;\n  \"generation-vi\":   { [key: string]: Home };\n  \"generation-vii\":  GenerationVii;\n  \"generation-viii\": GenerationViii;\n}\n\nexport interface Other {\n  dream_world:        DreamWorld;\n  home:               Home;\n  \"official-artwork\": OfficialArtwork;\n  showdown:           Sprites;\n}\n\nexport interface Sprites {\n  back_default:       string;\n  back_female:        null;\n  back_shiny:         string;\n  back_shiny_female:  null;\n  front_default:      string;\n  front_female:       null;\n  front_shiny:        string;\n  front_shiny_female: null;\n  other?:             Other;\n  versions?:          Versions;\n  animated?:          Sprites;\n}\n\nexport interface GenerationI {\n  \"red-blue\": RedBlue;\n  yellow:     RedBlue;\n}\n\nexport interface RedBlue {\n  back_default:      string;\n  back_gray:         string;\n  back_transparent:  string;\n  front_default:     string;\n  front_gray:        string;\n  front_transparent: string;\n}\n\nexport interface GenerationIi {\n  crystal: Crystal;\n  gold:    Gold;\n  silver:  Gold;\n}\n\nexport interface Crystal {\n  back_default:            string;\n  back_shiny:              string;\n  back_shiny_transparent:  string;\n  back_transparent:        string;\n  front_default:           string;\n  front_shiny:             string;\n  front_shiny_transparent: string;\n  front_transparent:       string;\n}\n\nexport interface Gold {\n  back_default:       string;\n  back_shiny:         string;\n  front_default:      string;\n  front_shiny:        string;\n  front_transparent?: string;\n}\n\nexport interface GenerationIii {\n  emerald:             OfficialArtwork;\n  \"firered-leafgreen\": Gold;\n  \"ruby-sapphire\":     Gold;\n}\n\nexport interface OfficialArtwork {\n  front_default: string;\n  front_shiny:   string;\n}\n\nexport interface Home {\n  front_default:      string;\n  front_female:       null;\n  front_shiny:        string;\n  front_shiny_female: null;\n}\n\nexport interface GenerationVii {\n  icons:                  DreamWorld;\n  \"ultra-sun-ultra-moon\": Home;\n}\n\nexport interface DreamWorld {\n  front_default: string;\n  front_female:  null;\n}\n\nexport interface GenerationViii {\n  icons: DreamWorld;\n}\n\nexport interface Stat {\n  base_stat: number;\n  effort:    number;\n  stat:      Species;\n}\n\nexport interface Type {\n  slot: number;\n  type: Species;\n}\n\ntype ApiResponse = { page: number, per_page: number, total: number, total_pages: number, results: Welcome[] }\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  httpClient = inject(HttpClient);\n\n  getAll(): Promise<ApiResponse> {\n    return firstValueFrom(\n      this.httpClient.get<ApiResponse>('')\n    )\n  }\n\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAAqBC,MAAM,QAAQ,eAAe;AAClD,SAASC,cAAc,QAAQ,MAAM;;AAoMrC,OAAM,MAAOC,eAAe;EAH5BC,YAAA;IAKE,KAAAC,UAAU,GAAGJ,MAAM,CAACD,UAAU,CAAC;;EAE/BM,MAAMA,CAAA;IACJ,OAAOJ,cAAc,CACnB,IAAI,CAACG,UAAU,CAACE,GAAG,CAAc,EAAE,CAAC,CACrC;EACH;EAAC,QAAAC,CAAA,G;qBARUL,eAAe;EAAA;EAAA,QAAAM,EAAA,G;WAAfN,eAAe;IAAAO,OAAA,EAAfP,eAAe,CAAAQ,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}