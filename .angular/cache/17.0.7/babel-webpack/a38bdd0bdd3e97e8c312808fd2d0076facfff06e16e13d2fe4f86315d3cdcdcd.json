{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport var TipoMotor;\n(function (TipoMotor) {\n  TipoMotor[\"Diesel\"] = \"Diesel\";\n  TipoMotor[\"El\\u00E9ctrico\"] = \"El\\u00E9ctrico\";\n  TipoMotor[\"Gasolina\"] = \"Gasolina\";\n  TipoMotor[\"H\\u00EDbrido\"] = \"H\\u00EDbrido\";\n})(TipoMotor || (TipoMotor = {}));\nexport class ProductsService {\n  constructor() {\n    this.httpClient = inject(HttpClient);\n  }\n  getAll() {\n    return firstValueFrom(this.httpClient.get('http://localhost:3000/api/auto')).then(response => {\n      console.log(response);\n      return response;\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n  static #_ = this.ɵfac = function ProductsService_Factory(t) {\n    return new (t || ProductsService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductsService,\n    factory: ProductsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpClient","inject","firstValueFrom","TipoMotor","ProductsService","constructor","httpClient","getAll","get","then","response","console","log","catch","error","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\josep\\IONPra\\src\\app\\services\\products.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface Welcome {\n  ejemplos: Ejemplo[];\n}\n\nexport interface Ejemplo {\n  _id:           string;\n  Imagen:        string;\n  Marca:         string;\n  Tipo_Vehiculo: string;\n  Tipo_Motor:    TipoMotor;\n  Color:         string;\n  Peso:          string[];\n  Año_Modelo:    string[];\n}\n\nexport enum TipoMotor {\n  Diesel = \"Diesel\",\n  Eléctrico = \"Eléctrico\",\n  Gasolina = \"Gasolina\",\n  Híbrido = \"Híbrido\",\n}\n\ntype ApiResponse = {  ejemplo: Ejemplo[] }\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  httpClient = inject(HttpClient);\n\n  getAll(): Promise<ApiResponse> {\n    return firstValueFrom(\n      this.httpClient.get<ApiResponse>('http://localhost:3000/api/auto')\n    ).then(response => {\n      console.log(response);\n      return response;\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n  \n\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAAqBC,MAAM,QAAQ,eAAe;AAClD,SAASC,cAAc,QAAQ,MAAM;;AAiBrC,WAAYC,SAKX;AALD,WAAYA,SAAS;EACnBA,SAAA,qBAAiB;EACjBA,SAAA,qCAAuB;EACvBA,SAAA,yBAAqB;EACrBA,SAAA,iCAAmB;AACrB,CAAC,EALWA,SAAS,KAATA,SAAS;AAYrB,OAAM,MAAOC,eAAe;EAH5BC,YAAA;IAKE,KAAAC,UAAU,GAAGL,MAAM,CAACD,UAAU,CAAC;;EAE/BO,MAAMA,CAAA;IACJ,OAAOL,cAAc,CACnB,IAAI,CAACI,UAAU,CAACE,GAAG,CAAc,gCAAgC,CAAC,CACnE,CAACC,IAAI,CAACC,QAAQ,IAAG;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,OAAOA,QAAQ;IACjB,CAAC,CAAC,CAACG,KAAK,CAACC,KAAK,IAAG;MACfH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAbUX,eAAe;EAAA;EAAA,QAAAY,EAAA,G;WAAfZ,eAAe;IAAAa,OAAA,EAAfb,eAAe,CAAAc,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}